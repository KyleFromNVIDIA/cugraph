RUNNING: "python -m dask_cuda.cli.dask_cuda_worker --rmm-pool-size=12G
             --local-directory=/tmp/
             --scheduler-file=/root/work/cugraph/mg_utils/dask-scheduler.json
             --memory-limit=auto
             --device-memory-limit=auto
            "
2023-06-22 22:49:51,647 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:45155'
2023-06-22 22:49:51,651 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:41617'
2023-06-22 22:49:51,652 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:37185'
2023-06-22 22:49:51,655 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:41425'
2023-06-22 22:49:51,657 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:46413'
2023-06-22 22:49:51,660 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:46779'
2023-06-22 22:49:51,662 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:35789'
2023-06-22 22:49:51,665 - distributed.nanny - INFO -         Start Nanny at: 'tcp://10.33.227.169:36325'
2023-06-22 22:49:53,155 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,155 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,232 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,232 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,243 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,243 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,244 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,244 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,244 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,244 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,257 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,257 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,268 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,268 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,269 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize
2023-06-22 22:49:53,269 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize
2023-06-22 22:49:53,559 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:53,641 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:53,706 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:53,706 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:53,707 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:53,722 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:53,727 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:53,730 - distributed.preloading - INFO - Run preload setup: dask_cuda.initialize
2023-06-22 22:49:54,833 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:33893
2023-06-22 22:49:54,833 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:33893
2023-06-22 22:49:54,833 - distributed.worker - INFO -          dashboard at:        10.33.227.169:37417
2023-06-22 22:49:54,833 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:54,833 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:54,833 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:54,834 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:54,834 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-ijz72abh
2023-06-22 22:49:54,834 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-e6075dc7-5a67-4052-a00e-b6f699a31592
2023-06-22 22:49:54,834 - distributed.worker - INFO - Starting Worker plugin PreImport-d5573f0d-238a-43e5-887f-86a6586393ae
2023-06-22 22:49:54,834 - distributed.worker - INFO - Starting Worker plugin RMMSetup-8fec62db-2e99-475a-8736-0c2773b2d0ba
2023-06-22 22:49:55,332 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:55,629 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:55,630 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:55,632 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:56,041 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:41621
2023-06-22 22:49:56,041 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:34765
2023-06-22 22:49:56,041 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:41621
2023-06-22 22:49:56,041 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:34765
2023-06-22 22:49:56,042 - distributed.worker - INFO -          dashboard at:        10.33.227.169:40153
2023-06-22 22:49:56,042 - distributed.worker - INFO -          dashboard at:        10.33.227.169:34753
2023-06-22 22:49:56,042 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,042 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,042 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,042 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,042 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:56,042 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:56,042 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:56,042 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:56,042 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-qnlhlqz_
2023-06-22 22:49:56,042 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-1zh7iz8q
2023-06-22 22:49:56,042 - distributed.worker - INFO - Starting Worker plugin PreImport-8749dbc8-9ead-4c4e-a596-2068c1962f5a
2023-06-22 22:49:56,042 - distributed.worker - INFO - Starting Worker plugin RMMSetup-3663f65d-1f9b-4dd7-8d3c-4185eef311d0
2023-06-22 22:49:56,042 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-3220676c-73e7-4505-9e77-6d3b9964773b
2023-06-22 22:49:56,042 - distributed.worker - INFO - Starting Worker plugin RMMSetup-5c593c98-41fe-4e23-9d91-af9f7a793a54
2023-06-22 22:49:56,044 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:34853
2023-06-22 22:49:56,044 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:34853
2023-06-22 22:49:56,044 - distributed.worker - INFO -          dashboard at:        10.33.227.169:39635
2023-06-22 22:49:56,044 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,044 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,044 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:40595
2023-06-22 22:49:56,044 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:56,044 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:40595
2023-06-22 22:49:56,044 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:56,044 - distributed.worker - INFO -          dashboard at:        10.33.227.169:46757
2023-06-22 22:49:56,044 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-f8agvcgk
2023-06-22 22:49:56,044 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:42053
2023-06-22 22:49:56,044 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,044 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:42053
2023-06-22 22:49:56,044 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,044 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:56,044 - distributed.worker - INFO -          dashboard at:        10.33.227.169:34693
2023-06-22 22:49:56,044 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,044 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:56,045 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,045 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-g9fl4y74
2023-06-22 22:49:56,044 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:39529
2023-06-22 22:49:56,045 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:56,045 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:39529
2023-06-22 22:49:56,045 - distributed.worker - INFO - Starting Worker plugin RMMSetup-5252e665-c3cc-4ff2-8108-b686e87d5078
2023-06-22 22:49:56,045 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:56,045 - distributed.worker - INFO -          dashboard at:        10.33.227.169:36853
2023-06-22 22:49:56,045 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-0gxq_p5n
2023-06-22 22:49:56,045 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,045 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,045 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:56,045 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:56,045 - distributed.worker - INFO - Starting Worker plugin RMMSetup-a8166d28-5624-48b1-813f-779f3c423449
2023-06-22 22:49:56,045 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-y33c_v2_
2023-06-22 22:49:56,045 - distributed.worker - INFO -       Start worker at:  tcp://10.33.227.169:42829
2023-06-22 22:49:56,045 - distributed.worker - INFO -          Listening to:  tcp://10.33.227.169:42829
2023-06-22 22:49:56,045 - distributed.worker - INFO -          dashboard at:        10.33.227.169:41659
2023-06-22 22:49:56,045 - distributed.worker - INFO - Starting Worker plugin PreImport-0ad0e6e3-eab1-46c6-855f-448b2d7cf7c5
2023-06-22 22:49:56,045 - distributed.worker - INFO - Waiting to connect to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,045 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-796c2b4e-151e-459d-8d95-3ed0dcacedf2
2023-06-22 22:49:56,045 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,045 - distributed.worker - INFO -               Threads:                          1
2023-06-22 22:49:56,045 - distributed.worker - INFO - Starting Worker plugin RMMSetup-210816e8-f935-4e9e-ae72-edab5368871f
2023-06-22 22:49:56,046 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-8014d639-90bb-4ffb-b110-74bfee8d3c8c
2023-06-22 22:49:56,046 - distributed.worker - INFO -                Memory:                  62.97 GiB
2023-06-22 22:49:56,046 - distributed.worker - INFO -       Local Directory: /tmp/dask-scratch-space/worker-xo19b72h
2023-06-22 22:49:56,046 - distributed.worker - INFO - Starting Worker plugin PreImport-6448d267-7721-4ed8-8132-d94ccae3e679
2023-06-22 22:49:56,046 - distributed.worker - INFO - Starting Worker plugin RMMSetup-8ab7eba0-1e7d-4e08-b177-a82a377dc4b5
2023-06-22 22:49:56,047 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-e5b866db-cbed-4164-a1e7-00fe2ecc3a85
2023-06-22 22:49:56,047 - distributed.worker - INFO - Starting Worker plugin PreImport-2242348c-006c-4fc0-9b33-4b6641fd231d
2023-06-22 22:49:56,047 - distributed.worker - INFO - Starting Worker plugin RMMSetup-98b93127-e881-4a63-bb3d-9dd75a85a826
2023-06-22 22:49:56,206 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,206 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,206 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,207 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,217 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,217 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,218 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,218 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:56,218 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,220 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:56,220 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,220 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,221 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,221 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,222 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:56,224 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:56,256 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-3f1a54db-fc8e-4f8f-b8b3-72bdff1ce73c
2023-06-22 22:49:56,256 - distributed.worker - INFO - Starting Worker plugin PreImport-55545a97-3ee3-45b8-93ac-efc743849645
2023-06-22 22:49:56,256 - distributed.worker - INFO - Starting Worker plugin PreImport-3df430f6-1239-4f5b-a419-c31a5bd36acf
2023-06-22 22:49:56,256 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-cd8ea2a4-fbd2-443b-9183-f5b222c206ce
2023-06-22 22:49:56,256 - distributed.worker - INFO - Starting Worker plugin CPUAffinity-e6ccfeae-d664-48f1-a02a-bc1ba12c2cf6
2023-06-22 22:49:56,257 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,259 - distributed.worker - INFO - Starting Worker plugin PreImport-029e1fe4-52c3-421d-b0ce-5432a5b02b82
2023-06-22 22:49:56,260 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,262 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,270 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,270 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,272 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:56,275 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,275 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,277 - distributed.worker - INFO -         Registered to:   tcp://10.33.227.169:8786
2023-06-22 22:49:56,277 - distributed.worker - INFO - -------------------------------------------------
2023-06-22 22:49:56,278 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:56,279 - distributed.core - INFO - Starting established connection to tcp://10.33.227.169:8786
2023-06-22 22:49:58,693 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,693 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,694 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,694 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,694 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,694 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,694 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,694 - distributed.worker - INFO - Run out-of-band function '_func_ucp_listener_port'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:49:58,790 - distributed.worker - INFO - Run out-of-band function '_func_init_all'
2023-06-22 22:50:09,840 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:09,856 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:09,963 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:09,996 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:10,038 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:10,125 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:10,394 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:10,585 - distributed.worker - INFO - Run out-of-band function '_subcomm_init'
2023-06-22 22:50:16,621 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.25s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:16,621 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.24s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:16,621 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.24s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:16,621 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.24s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:16,622 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.24s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:16,622 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.25s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:16,623 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.24s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:16,623 - distributed.core - INFO - Event loop was unresponsive in Worker for 16.25s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.
2023-06-22 22:50:49,268 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:49,268 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:49,273 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:49,273 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:49,274 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:49,274 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:49,274 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:49,274 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,623 - distributed.worker - WARNING - Compute Failed
Key:       _call_plc_uniform_neighbor_sample-de152969-ef0b-45f3-a4ae-38accc6fa0c4
Function:  execute_task
args:      ((<function apply at 0x7fd2c574ecb0>, <function _call_plc_uniform_neighbor_sample at 0x7fce1c64c310>, [b'\xd6\xf8\x04-?\xa7J\xee\xb6\xd8\xcd\xc1\x0f\xdd\xd6\x18', <pylibcugraph.graphs.MGGraph object at 0x7fcc4d0ff370>, [Empty DataFrame
Columns: [_START_, _BATCH_]
Index: [], Empty DataFrame
Columns: [_START_, _BATCH_]
Index: []], True, 8, 0, 9, array([10, 25], dtype=int32), False], (<class 'dict'>, [['weight_t', 'float32'], ['with_edge_properties', True], ['random_state', 4398544965468170236], ['return_offsets', False]])))
kwargs:    {}
Exception: "ValueError('start list too small 2')"

2023-06-22 22:50:53,624 - distributed.worker - WARNING - Compute Failed
Key:       _call_plc_uniform_neighbor_sample-019bcb2e-2a09-4201-b17c-d6ea3be38cff
Function:  execute_task
args:      ((<function apply at 0x7f744370ecb0>, <function _call_plc_uniform_neighbor_sample at 0x7f6fc01c32e0>, [b'\xd6\xf8\x04-?\xa7J\xee\xb6\xd8\xcd\xc1\x0f\xdd\xd6\x18', <pylibcugraph.graphs.MGGraph object at 0x7f6ddc28d9d0>, [Empty DataFrame
Columns: [_START_, _BATCH_]
Index: [], Empty DataFrame
Columns: [_START_, _BATCH_]
Index: []], True, 8, 0, 9, array([10, 25], dtype=int32), False], (<class 'dict'>, [['weight_t', 'float32'], ['with_edge_properties', True], ['random_state', 7770788461316092689], ['return_offsets', False]])))
kwargs:    {}
Exception: "ValueError('start list too small 2')"

2023-06-22 22:50:53,624 - distributed.worker - WARNING - Compute Failed
Key:       _call_plc_uniform_neighbor_sample-0e032f64-d038-4353-837a-e7d8e243943d
Function:  execute_task
args:      ((<function apply at 0x7f238b41acb0>, <function _call_plc_uniform_neighbor_sample at 0x7f1f002eb640>, [b'\xd6\xf8\x04-?\xa7J\xee\xb6\xd8\xcd\xc1\x0f\xdd\xd6\x18', <pylibcugraph.graphs.MGGraph object at 0x7f1d0857ef10>, [Empty DataFrame
Columns: [_START_, _BATCH_]
Index: [], Empty DataFrame
Columns: [_START_, _BATCH_]
Index: []], True, 8, 0, 9, array([10, 25], dtype=int32), False], (<class 'dict'>, [['weight_t', 'float32'], ['with_edge_properties', True], ['random_state', -742897620020717175], ['return_offsets', False]])))
kwargs:    {}
Exception: "ValueError('start list too small 2')"

2023-06-22 22:50:53,624 - distributed.worker - WARNING - Compute Failed
Key:       _call_plc_uniform_neighbor_sample-2ee4cd82-58a5-473d-9457-37e6608fbf3d
Function:  execute_task
args:      ((<function apply at 0x7fa120d3ecb0>, <function _call_plc_uniform_neighbor_sample at 0x7f9c8848e200>, [b'\xd6\xf8\x04-?\xa7J\xee\xb6\xd8\xcd\xc1\x0f\xdd\xd6\x18', <pylibcugraph.graphs.MGGraph object at 0x7f9aac41ec90>, [Empty DataFrame
Columns: [_START_, _BATCH_]
Index: [], Empty DataFrame
Columns: [_START_, _BATCH_]
Index: []], True, 8, 0, 9, array([10, 25], dtype=int32), False], (<class 'dict'>, [['weight_t', 'float32'], ['with_edge_properties', True], ['random_state', -5839667413490048051], ['return_offsets', False]])))
kwargs:    {}
Exception: "ValueError('start list too small 2')"

2023-06-22 22:50:53,625 - distributed.worker - WARNING - Compute Failed
Key:       _call_plc_uniform_neighbor_sample-c28d0164-fd19-4ba9-8a74-39349231abc4
Function:  execute_task
args:      ((<function apply at 0x7ff593026cb0>, <function _call_plc_uniform_neighbor_sample at 0x7ff0e86b8310>, [b'\xd6\xf8\x04-?\xa7J\xee\xb6\xd8\xcd\xc1\x0f\xdd\xd6\x18', <pylibcugraph.graphs.MGGraph object at 0x7fef2c10fa30>, [Empty DataFrame
Columns: [_START_, _BATCH_]
Index: [], Empty DataFrame
Columns: [_START_, _BATCH_]
Index: []], True, 8, 0, 9, array([10, 25], dtype=int32), False], (<class 'dict'>, [['weight_t', 'float32'], ['with_edge_properties', True], ['random_state', 1702364252427781240], ['return_offsets', False]])))
kwargs:    {}
Exception: "ValueError('start list too small 2')"

2023-06-22 22:50:53,627 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,627 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,627 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,627 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,627 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,627 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,627 - distributed.worker - WARNING - Compute Failed
Key:       _call_plc_uniform_neighbor_sample-e9909903-60e8-407f-ad01-5458acc8fabf
Function:  execute_task
args:      ((<function apply at 0x7f9ce9beacb0>, <function _call_plc_uniform_neighbor_sample at 0x7f98203105e0>, [b'\xd6\xf8\x04-?\xa7J\xee\xb6\xd8\xcd\xc1\x0f\xdd\xd6\x18', <pylibcugraph.graphs.MGGraph object at 0x7f96841b11d0>, [Empty DataFrame
Columns: [_START_, _BATCH_]
Index: [], Empty DataFrame
Columns: [_START_, _BATCH_]
Index: []], True, 8, 0, 9, array([10, 25], dtype=int32), False], (<class 'dict'>, [['weight_t', 'float32'], ['with_edge_properties', True], ['random_state', -3822223585721917765], ['return_offsets', False]])))
kwargs:    {}
Exception: "ValueError('start list too small 2')"

2023-06-22 22:50:53,628 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:50:53,629 - distributed.worker - INFO - Run out-of-band function 'collect'
2023-06-22 22:54:49,921 - distributed.worker - INFO - Stopping worker at tcp://10.33.227.169:42829. Reason: worker-handle-scheduler-connection-broken
2023-06-22 22:54:49,921 - distributed.worker - INFO - Stopping worker at tcp://10.33.227.169:40595. Reason: worker-handle-scheduler-connection-broken
2023-06-22 22:54:49,921 - distributed.worker - INFO - Stopping worker at tcp://10.33.227.169:42053. Reason: worker-handle-scheduler-connection-broken
2023-06-22 22:54:49,921 - distributed.worker - INFO - Stopping worker at tcp://10.33.227.169:39529. Reason: worker-handle-scheduler-connection-broken
2023-06-22 22:54:49,921 - distributed.worker - INFO - Stopping worker at tcp://10.33.227.169:34853. Reason: worker-handle-scheduler-connection-broken
2023-06-22 22:54:49,921 - distributed.worker - INFO - Stopping worker at tcp://10.33.227.169:41621. Reason: worker-handle-scheduler-connection-broken
2023-06-22 22:54:49,921 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:41425'. Reason: nanny-close
2023-06-22 22:54:49,922 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,923 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:45155'. Reason: nanny-close
2023-06-22 22:54:49,923 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,924 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:41617'. Reason: nanny-close
2023-06-22 22:54:49,924 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,924 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:37185'. Reason: nanny-close
2023-06-22 22:54:49,925 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,925 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:46413'. Reason: nanny-close
2023-06-22 22:54:49,925 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,926 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:46779'. Reason: nanny-close
2023-06-22 22:54:49,926 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,926 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:35789'. Reason: nanny-close
2023-06-22 22:54:49,926 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,927 - distributed.nanny - INFO - Closing Nanny at 'tcp://10.33.227.169:36325'. Reason: nanny-close
2023-06-22 22:54:49,927 - distributed.nanny - INFO - Nanny asking worker to close. Reason: nanny-close
2023-06-22 22:54:49,937 - distributed.worker - ERROR - Timed out during handshake while connecting to tcp://10.33.227.169:41617 after 100 s
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 861, in _read_to_buffer
    bytes_read = self.read_from_fd(buf)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 1116, in read_from_fd
    return self.socket.recv_into(buf, len(buf))
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 373, in connect
    handshake = await wait_for(comm.read(), time_left())
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 445, in wait_for
    return fut.result()
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 241, in read
    convert_stream_closed_error(self, e)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc.__class__.__name__}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed)  local=tcp://10.33.227.169:52354 remote=tcp://10.33.227.169:41617>: ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 754, in wrapper
    return await func(*args, **kwargs)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/worker.py", line 1540, in close
    await r.close_gracefully(reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1362, in send_recv_from_rpc
    comm = await self.pool.connect(self.addr)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1606, in connect
    return await connect_attempt
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1527, in _connect
    comm = await connect(
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 378, in connect
    raise OSError(
OSError: Timed out during handshake while connecting to tcp://10.33.227.169:41617 after 100 s
2023-06-22 22:54:49,937 - distributed.worker - ERROR - Timed out during handshake while connecting to tcp://10.33.227.169:45155 after 100 s
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 861, in _read_to_buffer
    bytes_read = self.read_from_fd(buf)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 1116, in read_from_fd
    return self.socket.recv_into(buf, len(buf))
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 373, in connect
    handshake = await wait_for(comm.read(), time_left())
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 445, in wait_for
    return fut.result()
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 241, in read
    convert_stream_closed_error(self, e)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc.__class__.__name__}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed)  local=tcp://10.33.227.169:45770 remote=tcp://10.33.227.169:45155>: ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 754, in wrapper
    return await func(*args, **kwargs)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/worker.py", line 1540, in close
    await r.close_gracefully(reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1362, in send_recv_from_rpc
    comm = await self.pool.connect(self.addr)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1606, in connect
    return await connect_attempt
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1527, in _connect
    comm = await connect(
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 378, in connect
    raise OSError(
OSError: Timed out during handshake while connecting to tcp://10.33.227.169:45155 after 100 s
2023-06-22 22:54:49,943 - distributed.worker - ERROR - Timed out during handshake while connecting to tcp://10.33.227.169:46413 after 100 s
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 861, in _read_to_buffer
    bytes_read = self.read_from_fd(buf)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 1116, in read_from_fd
    return self.socket.recv_into(buf, len(buf))
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 373, in connect
    handshake = await wait_for(comm.read(), time_left())
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 445, in wait_for
    return fut.result()
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 241, in read
    convert_stream_closed_error(self, e)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc.__class__.__name__}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed)  local=tcp://10.33.227.169:34602 remote=tcp://10.33.227.169:46413>: ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 754, in wrapper
    return await func(*args, **kwargs)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/worker.py", line 1540, in close
    await r.close_gracefully(reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1362, in send_recv_from_rpc
    comm = await self.pool.connect(self.addr)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1606, in connect
    return await connect_attempt
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1527, in _connect
    comm = await connect(
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 378, in connect
    raise OSError(
OSError: Timed out during handshake while connecting to tcp://10.33.227.169:46413 after 100 s
2023-06-22 22:54:49,947 - distributed.worker - ERROR - Timed out during handshake while connecting to tcp://10.33.227.169:35789 after 100 s
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 861, in _read_to_buffer
    bytes_read = self.read_from_fd(buf)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 1116, in read_from_fd
    return self.socket.recv_into(buf, len(buf))
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 373, in connect
    handshake = await wait_for(comm.read(), time_left())
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 445, in wait_for
    return fut.result()
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 241, in read
    convert_stream_closed_error(self, e)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc.__class__.__name__}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed)  local=tcp://10.33.227.169:48262 remote=tcp://10.33.227.169:35789>: ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 754, in wrapper
    return await func(*args, **kwargs)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/worker.py", line 1540, in close
    await r.close_gracefully(reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1362, in send_recv_from_rpc
    comm = await self.pool.connect(self.addr)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1606, in connect
    return await connect_attempt
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1527, in _connect
    comm = await connect(
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 378, in connect
    raise OSError(
OSError: Timed out during handshake while connecting to tcp://10.33.227.169:35789 after 100 s
2023-06-22 22:54:49,950 - distributed.worker - ERROR - Timed out during handshake while connecting to tcp://10.33.227.169:46779 after 100 s
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 861, in _read_to_buffer
    bytes_read = self.read_from_fd(buf)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/tornado/iostream.py", line 1116, in read_from_fd
    return self.socket.recv_into(buf, len(buf))
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 373, in connect
    handshake = await wait_for(comm.read(), time_left())
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 445, in wait_for
    return fut.result()
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 241, in read
    convert_stream_closed_error(self, e)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc.__class__.__name__}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed)  local=tcp://10.33.227.169:47888 remote=tcp://10.33.227.169:46779>: ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 754, in wrapper
    return await func(*args, **kwargs)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/worker.py", line 1540, in close
    await r.close_gracefully(reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1362, in send_recv_from_rpc
    comm = await self.pool.connect(self.addr)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1606, in connect
    return await connect_attempt
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/core.py", line 1527, in _connect
    comm = await connect(
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/comm/core.py", line 378, in connect
    raise OSError(
OSError: Timed out during handshake while connecting to tcp://10.33.227.169:46779 after 100 s
2023-06-22 22:54:53,129 - distributed.nanny - WARNING - Worker process still alive after 3.1999938964843753 seconds, killing
2023-06-22 22:54:53,129 - distributed.nanny - WARNING - Worker process still alive after 3.199999389648438 seconds, killing
2023-06-22 22:54:53,130 - distributed.nanny - WARNING - Worker process still alive after 3.1999995422363288 seconds, killing
2023-06-22 22:54:53,131 - distributed.nanny - WARNING - Worker process still alive after 3.1999995422363288 seconds, killing
2023-06-22 22:54:53,132 - distributed.nanny - WARNING - Worker process still alive after 3.1999992370605472 seconds, killing
2023-06-22 22:54:53,132 - distributed.nanny - WARNING - Worker process still alive after 3.199999389648438 seconds, killing
2023-06-22 22:54:53,133 - distributed.nanny - WARNING - Worker process still alive after 3.199999389648438 seconds, killing
2023-06-22 22:54:53,133 - distributed.nanny - WARNING - Worker process still alive after 3.1999995422363288 seconds, killing
2023-06-22 22:54:53,922 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,094 - distributed.nanny - INFO - Worker process 1485350 was killed by signal 9
2023-06-22 22:54:54,096 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,096 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,096 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,096 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,097 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,097 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,097 - distributed.nanny - ERROR - Error in Nanny killing Worker subprocess
Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 456, in wait_for
    return fut.result()
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 597, in close
    await self.kill(timeout=timeout, reason=reason)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 380, in kill
    await self.process.kill(reason=reason, timeout=0.8 * (deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/nanny.py", line 853, in kill
    await process.join(max(0, deadline - time()))
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/process.py", line 330, in join
    await wait_for(asyncio.shield(self._exit_future), timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/site-packages/distributed/utils.py", line 1878, in wait_for
    return await asyncio.wait_for(fut, timeout)
  File "/opt/conda/envs/rapids/lib/python3.10/asyncio/tasks.py", line 458, in wait_for
    raise exceptions.TimeoutError() from exc
asyncio.exceptions.TimeoutError
2023-06-22 22:54:54,098 - distributed.process - INFO - reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=1485362 parent=1485305 started daemon>
2023-06-22 22:54:54,099 - distributed.process - INFO - reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=1485359 parent=1485305 started daemon>
2023-06-22 22:54:54,099 - distributed.process - INFO - reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=1485356 parent=1485305 started daemon>
2023-06-22 22:54:54,099 - distributed.process - INFO - reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=1485353 parent=1485305 started daemon>
2023-06-22 22:54:54,099 - distributed.process - INFO - reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=1485347 parent=1485305 started daemon>
2023-06-22 22:54:54,099 - distributed.process - INFO - reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=1485344 parent=1485305 started daemon>
2023-06-22 22:54:54,099 - distributed.process - INFO - reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=1485341 parent=1485305 started daemon>
2023-06-22 22:54:54,569 - distributed.process - WARNING - [<AsyncProcess Dask Worker process (from Nanny)>] process 1485353 exit status was already read will report exitcode 255
